@page
@model IdentityAjaxClient.Pages.OrderPage.Management.IndexModel

@{
    ViewData["Title"] = Model.IsStaff ? "Order Management" : "Orders";
}

<div class="container py-5">
    <!-- Botanical Header -->
    <div class="botanical-header text-center mb-5 position-relative">
        <div class="leaf-decoration left-leaf animate-float"></div>
        <h1 class="display-5 fw-bold section-title">@(Model.IsStaff ? "Order Management" : "My Orders")</h1>
        <p class="section-subtitle">@(Model.IsStaff ? "Manage and track customer orders" : "Track your flower orders")</p>
        <div class="leaf-decoration right-leaf animate-float"></div>
        
        <div class="d-flex align-items-center justify-content-center mt-4">
            <div class="divider-leaf"></div>
            <i class="bi bi-flower3 text-primary mx-3"></i>
            <div class="divider-leaf"></div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="alert-botanical alert-success-botanical alert-dismissible fade show mb-4" role="alert">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-check-circle-fill"></i>
                </div>
                <div>@TempData["SuccessMessage"]</div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        <div class="alert-botanical alert-danger-botanical alert-dismissible fade show mb-4" role="alert">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                </div>
                <div>@TempData["ErrorMessage"]</div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card-botanical shadow-botanical mb-4 animate-fade-in-up">
        <div class="card-header-botanical">
            <div class="d-flex align-items-center">
                <div class="icon-wrapper-botanical me-3" style="width: 40px; height: 40px;">
                    <i class="bi bi-filter-circle"></i>
                </div>
                <h4 class="mb-0 orchid-title">Filter Orders</h4>
            </div>
        </div>
        <div class="card-body p-4">
            <form method="get" class="row g-3 orchid-form">
                @if (Model.IsStaff)
                {
                    <div class="col-md-3">
                        <div class="form-floating">
                            <input type="text" class="form-control form-control-botanical" id="customerSearch" name="customerSearch" value="@Model.CustomerSearch" placeholder="Customer name or email">
                            <label for="customerSearch">Customer Email</label>
                        </div>
                    </div>
                }
                <div class="col-md-3">
                    <div class="form-floating">
                        <select class="form-select form-control-botanical" id="orderStatusSearch" name="orderStatusSearch" asp-for="OrderStatusSearch" asp-items="Model.OrderStatusList">
                        </select>
                        <label for="orderStatusSearch">Order Status</label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-floating">
                        <input type="date" class="form-control form-control-botanical" id="startDateSearch" name="startDateSearch" value="@(Model.StartDateSearch?.ToString("yyyy-MM-dd"))" placeholder="From date">
                        <label for="startDateSearch">From Date</label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-floating">
                        <input type="date" class="form-control form-control-botanical" id="endDateSearch" name="endDateSearch" value="@(Model.EndDateSearch?.ToString("yyyy-MM-dd"))" placeholder="To date">
                        <label for="endDateSearch">To Date</label>
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <div class="d-flex gap-2 w-100">
                        <button type="submit" class="btn-botanical btn-primary-botanical flex-grow-1">
                            <i class="bi bi-search me-2"></i> Search
                        </button>
                        <a asp-page="./Index" class="btn-botanical btn-outline-botanical flex-grow-1">
                            <i class="bi bi-x-circle me-2"></i> Clear
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card-botanical shadow-botanical animate-fade-in-up delay-100">
        <div class="card-header-botanical">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="icon-wrapper-botanical me-3" style="width: 40px; height: 40px;">
                        <i class="bi bi-cart4"></i>
                    </div>
                    <h4 class="mb-0 orchid-title">Orders</h4>
                </div>
                <span class="badge-botanical badge-natural">
                    Total: @Model.Orders.TotalCount order(s)
                </span>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Orders.TotalCount == 0)
            {
                <div class="p-5 text-center">
                    <div class="icon-wrapper-botanical mx-auto mb-4" style="width: 80px; height: 80px; background: var(--light-green); color: var(--primary-green);">
                        <i class="bi bi-inbox"></i>
                    </div>
                    <h5 class="orchid-title">No orders found</h5>
                    <p class="text-muted mb-4">Try adjusting your search filters</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-botanical">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Customer</th>
                                <th>Status</th>
                                <th>Total</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Orders.Items)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="date-icon me-3 rounded-circle bg-botanical-light d-flex flex-column align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                <span class="fw-bold" style="font-size: 1.1rem; line-height: 1;">@item.OrderDate?.Day</span>
                                                <span style="font-size: 0.7rem; line-height: 1;">@item.OrderDate?.ToString("MMM", new System.Globalization.CultureInfo("en-US"))</span>
                                            </div>
                                            <span>@item.OrderDate?.ToString("yyyy")</span>
                                        </div>
                                    </td>
                                    <td>
                                        @if (item.Account != null)
                                        {
                                            <div class="fw-medium">@item.Account.AccountName</div>
                                            <div class="text-muted small">@item.Account.Email</div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unknown</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="@GetStatusBadgeClass(item.OrderStatus)">
                                            @item.OrderStatus
                                        </span>
                                    </td>
                                    <td>
                                        <span class="fw-bold text-primary">@item.TotalAmount?.ToString("C", new System.Globalization.CultureInfo("en-US"))</span>
                                    </td>
                                    <td class="text-end">
                                        <div class="d-flex gap-2 justify-content-end">
                                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn-botanical btn-outline-botanical btn-sm">
                                                <i class="bi bi-eye me-1"></i> Details
                                            </a>
                                            @if (Model.IsStaff)
                                            {
                                                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn-botanical btn-outline-botanical btn-sm">
                                                    <i class="bi bi-pencil me-1"></i> Edit
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (Model.Orders.TotalPages > 1)
                {
                    <div class="d-flex justify-content-center p-4 border-top">
                        <nav aria-label="Page navigation">
                            <ul class="pagination pagination-botanical mb-0">
                                <li class="page-item @(Model.Orders.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-page="./Index"
                                       asp-route-pageIndex="1"
                                       asp-route-orderStatusSearch="@Model.OrderStatusSearch"
                                       asp-route-customerSearch="@Model.CustomerSearch"
                                       asp-route-startDateSearch="@Model.StartDateSearch?.ToString("yyyy-MM-dd")"
                                       asp-route-endDateSearch="@Model.EndDateSearch?.ToString("yyyy-MM-dd")">
                                        <i class="bi bi-chevron-double-left"></i>
                                    </a>
                                </li>
                                <li class="page-item @(Model.Orders.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-page="./Index"
                                       asp-route-pageIndex="@(Model.Orders.PageNumber - 1)"
                                       asp-route-orderStatusSearch="@Model.OrderStatusSearch"
                                       asp-route-customerSearch="@Model.CustomerSearch"
                                       asp-route-startDateSearch="@Model.StartDateSearch?.ToString("yyyy-MM-dd")"
                                       asp-route-endDateSearch="@Model.EndDateSearch?.ToString("yyyy-MM-dd")">
                                        <i class="bi bi-chevron-left"></i>
                                    </a>
                                </li>

                                @{
                                    int startPage = Math.Max(1, Model.Orders.PageNumber - 2);
                                    int endPage = Math.Min(Model.Orders.TotalPages, startPage + 4);
                                    startPage = Math.Max(1, endPage - 4);
                                }

                                @for (var i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == Model.Orders.PageNumber ? "active" : "")">
                                        <a class="page-link" asp-page="./Index"
                                           asp-route-pageIndex="@i"
                                           asp-route-orderStatusSearch="@Model.OrderStatusSearch"
                                           asp-route-customerSearch="@Model.CustomerSearch"
                                           asp-route-startDateSearch="@Model.StartDateSearch?.ToString("yyyy-MM-dd")"
                                           asp-route-endDateSearch="@Model.EndDateSearch?.ToString("yyyy-MM-dd")">
                                            @i
                                        </a>
                                    </li>
                                }

                                <li class="page-item @(Model.Orders.PageNumber == Model.Orders.TotalPages ? "disabled" : "")">
                                    <a class="page-link" asp-page="./Index"
                                       asp-route-pageIndex="@(Model.Orders.PageNumber + 1)"
                                       asp-route-orderStatusSearch="@Model.OrderStatusSearch"
                                       asp-route-customerSearch="@Model.CustomerSearch"
                                       asp-route-startDateSearch="@Model.StartDateSearch?.ToString("yyyy-MM-dd")"
                                       asp-route-endDateSearch="@Model.EndDateSearch?.ToString("yyyy-MM-dd")">
                                        <i class="bi bi-chevron-right"></i>
                                    </a>
                                </li>
                                <li class="page-item @(Model.Orders.PageNumber == Model.Orders.TotalPages ? "disabled" : "")">
                                    <a class="page-link" asp-page="./Index"
                                       asp-route-pageIndex="@Model.Orders.TotalPages"
                                       asp-route-orderStatusSearch="@Model.OrderStatusSearch"
                                       asp-route-customerSearch="@Model.CustomerSearch"
                                       asp-route-startDateSearch="@Model.StartDateSearch?.ToString("yyyy-MM-dd")"
                                       asp-route-endDateSearch="@Model.EndDateSearch?.ToString("yyyy-MM-dd")">
                                        <i class="bi bi-chevron-double-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string? status)
    {
        return status?.ToLower() switch
        {
            "pending" => "badge-botanical badge-warning",
            "processing" => "badge-botanical badge-info",
            "shipping" => "badge-botanical badge-primary",
            "delivered" => "badge-botanical badge-success",
            "completed" => "badge-botanical badge-success",
            "cancelled" => "badge-botanical badge-danger",
            _ => "badge-botanical badge-secondary"
        };
    }
}

@section Styles {
    <style>
        /* Form control botanical styling */
        .form-control-botanical {
            border-radius: 15px;
            border: 2px solid #e9ecef;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
        }
        
        .form-control-botanical:focus {
            border-color: var(--primary-green);
            box-shadow: 0 0 0 0.25rem rgba(93, 156, 89, 0.25);
        }
        
        /* Table botanical styling */
        .table-botanical {
            border-collapse: separate;
            border-spacing: 0 10px;
            margin-bottom: 0;
        }

        .table-botanical thead th {
            border: none;
            font-weight: 600;
            color: var(--dark-color);
            padding: 1rem 1.5rem;
            background-color: var(--light-green);
            opacity: 0.8;
        }
        
        .table-botanical tbody tr {
            background-color: white;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            border-radius: 15px;
            transition: all 0.3s ease;
        }
        
        .table-botanical tbody tr:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
        }
        
        .table-botanical tbody td {
            padding: 1.25rem 1.5rem;
            vertical-align: middle;
            border: none;
        }
        
        .table-botanical tbody td:first-child {
            border-top-left-radius: 15px;
            border-bottom-left-radius: 15px;
        }
        
        .table-botanical tbody td:last-child {
            border-top-right-radius: 15px;
            border-bottom-right-radius: 15px;
        }
        
        /* Badge styling */
        .badge-botanical {
            padding: 0.5em 1em;
            font-weight: 500;
            border-radius: 50px;
            font-size: 0.75rem;
        }
        
        .badge-warning {
            background-color: rgba(255, 193, 7, 0.2);
            color: #e6a100;
        }
        
        .badge-info {
            background-color: rgba(23, 162, 184, 0.2);
            color: #138496;
        }
        
        .badge-primary {
            background-color: rgba(var(--primary-rgb), 0.2);
            color: var(--primary-color);
        }
        
        .badge-success {
            background-color: rgba(var(--primary-green-rgb), 0.2);
            color: var(--primary-green);
        }
        
        .badge-danger {
            background-color: rgba(220, 53, 69, 0.2);
            color: #c82333;
        }
        
        .badge-secondary {
            background-color: rgba(108, 117, 125, 0.2);
            color: #5a6268;
        }
        
        /* Pagination botanical styling */
        .pagination-botanical .page-link {
            border-radius: 50%;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 3px;
            border: none;
            background-color: var(--light-green);
            color: var(--primary-green);
            transition: all 0.3s ease;
        }
        
        .pagination-botanical .page-item.active .page-link {
            background-color: var(--primary-green);
            color: white;
        }
        
        /* Alert styling */
        .alert-botanical {
            border: none;
            border-radius: 15px;
            padding: 1rem 1.5rem;
            position: relative;
        }
        
        .alert-success-botanical {
            background-color: rgba(var(--primary-green-rgb), 0.1);
            color: var(--primary-green);
        }
        
        .alert-danger-botanical {
            background-color: rgba(220, 53, 69, 0.1);
            color: #c82333;
        }
        
        /* Background color for botanical light */
        .bg-botanical-light {
            background-color: var(--light-green);
        }
        
        /* Button size customizations */
        .btn-sm {
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
        }
        
        /* Animations */
        @@keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }
        
        .animate-float {
            animation: float 6s infinite ease-in-out;
        }
        
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .animate-fade-in-up {
            animation: fadeInUp 0.8s ease-out forwards;
        }
        
        .delay-100 {
            animation-delay: 0.1s;
        }
        
        .fw-medium {
            font-weight: 500;
        }
    </style>
}